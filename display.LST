C51 COMPILER V9.52.0.0   DISPLAY                                                           06/02/2020 19:23:43 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE DISPLAY
OBJECT MODULE PLACED IN display.OBJ
COMPILER INVOKED BY: C:\Keil_C51\C51\BIN\C51.EXE display.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "sys_cfg.h"
   2          #include "display.h"
   3          
   4          
   5          /***********LCD12864液晶测忙子程序(读状态)************/ 
   6          void Busy()   
   7          {   
   8   1              uchar busy;
   9   1              do  
  10   1              {      
  11   2                      E = 0;      //0为关闭使能端,1为打开使能端      
  12   2                      DI = 0;      //1为指令,0为数据      
  13   2                      RW = 1;    //1为读,0为写       
  14   2                      Delay_1ms(20);  //延时20乘以120时间      
  15   2                      E = 1;     //0为关闭使能端,1为打开使能端  
  16   2                      P2M0=0x00;
  17   2                      P2M1=0x00;      //将P2设为准双向（传统51IO口）  
  18   2                      busy=P2;    //读取P2状态      
  19   2                      Delay_1ms(20);  //延时20乘以120时间      
  20   2                      E = 0;    //0为关闭使能端,1为打开使能端     
  21   2              }while(busy&0x80);  //判断BUSY位是否工作:1为内部在工作,0为正常状态 
  22   1      }  
  23          /***********LCD12864液晶数据写入子程序*************/ 
  24          void Write_Data(uchar k) 
  25          {   
  26   1              Busy();   //测忙
  27   1              E =1;   //0为关闭使能端,1为打开使能端    
  28   1              DI=1;   //1为指令,0为数据    
  29   1              RW=0;   //1为读,0为写   
  30   1              P2M0=0xFF;
  31   1              P2M1=0x00;      //将P2设为推挽          
  32   1              P2=k;   //输入数据K到DATA    
  33   1              Delay_1ms(20); //延时20乘以120时间    
  34   1              E =0;    //0为关闭使能端,1为打开使能端    
  35   1              Delay_1ms(20);   //延时20乘以120时间 
  36   1      }  
  37          
  38          /**********LCD12864液晶命令写入子程序**************/ 
  39          void Write_Cmd(uchar cmd) 
  40          {      
  41   1              Busy();    //测忙
  42   1              E=1;   //0为关闭使能端,1为打开使能端     
  43   1              DI=0;    //1为指令,0为数据     
  44   1              RW=0;   //1为读,0为写   
  45   1              P2M0=0xFF;
  46   1              P2M1=0x00;      //将P2设为推挽 
  47   1              P2=cmd;    //输入命令cmd到DATA     
  48   1              Delay_1ms(20); //延时20乘以120时间 
  49   1              E=0;   //0为关闭使能端,1为打开使能端     
  50   1              Delay_1ms(20); //延时20乘以120时间 
  51   1      }
  52          
  53          /******显示数组字符串(显示半宽字型16*8点阵)******/
  54          void ShowQQChar(uchar addr,uchar *english,uchar count)//DDRAM地址，数据首字节指针，数据长度
  55          {
C51 COMPILER V9.52.0.0   DISPLAY                                                           06/02/2020 19:23:43 PAGE 2   

  56   1              uchar i;
  57   1              Write_Cmd(addr); //设定DDRAM地址
  58   1              for(i=0;i<count;)
  59   1              {
  60   2                      Write_Data(english[i*2]);
  61   2                      Write_Data(english[i*2+1]);
  62   2                      i++;
  63   2              }
  64   1      }
  65          
  66          /******************字符和汉字显示****************/ 
  67          void Disp(uchar y,uchar x,uchar i,uchar *z)   
  68          {     
  69   1              uchar Address;    
  70   1              //Y判断第几行,X判断第几列,0x80为液晶行初始地址    
  71   1              if(y==1)  Address=0x80+x;
  72   1              if(y==2)  Address=0x90+x;        
  73   1              if(y==3)  Address=0x88+x;    
  74   1              if(y==4)  Address=0x98+x;  
  75   1              Write_Cmd(Address);             //写入地址命令到LCD12864  
  76   1              while(i)                        //写入显示数据的大小  
  77   1              {    
  78   2                      Write_Data(*(z++));     //写入显示数据到LCD12864    
  79   2                      i--;         
  80   2              }   
  81   1      } 
  82                  
  83          /*********自定义字符1（16X16）写入CGRAM**********/
  84          void WRCGRAM1(uchar addr)//单下划线
  85          {
  86   1              uchar i;
  87   1              for(i=0;i<2;)
  88   1              {
  89   2                      Write_Cmd(addr+i); //设定CGRAM地址
  90   2                      Write_Data(0xff);
  91   2                      Write_Data(0x00);
  92   2                      i++;
  93   2                      Write_Cmd(addr+i); //设定CGRAM地址
  94   2                      Write_Data(0x00);
  95   2                      Write_Data(0x00);
  96   2                      i++;
  97   2              }
  98   1              for(i=2;i<16;i++)
  99   1              {
 100   2                      Write_Cmd(addr+i); //设定CGRAM地址
 101   2                      Write_Data(0x00);
 102   2                      Write_Data(0x00);
 103   2              }
 104   1      }
 105          
 106          /***********自定义字符2（16X16）写入CGRAM**********/
 107          void WRCGRAM2(uchar addr)//双下划线
 108          {
 109   1              uchar i;
 110   1              for(i=0;i<4;)
 111   1              {
 112   2                      Write_Cmd(addr+i); //设定CGRAM地址
 113   2                      Write_Data(0xff);
 114   2                      Write_Data(0x00);
 115   2                      i++;
 116   2                      Write_Cmd(addr+i); //设定CGRAM地址
 117   2                      Write_Data(0x00);
C51 COMPILER V9.52.0.0   DISPLAY                                                           06/02/2020 19:23:43 PAGE 3   

 118   2                      Write_Data(0x00);
 119   2                      i++;
 120   2              }
 121   1              for(i=4;i<16;i++)
 122   1              {
 123   2                      Write_Cmd(addr+i); //设定CGRAM地址
 124   2                      Write_Data(0x00);
 125   2                      Write_Data(0x00);
 126   2              }
 127   1      }
 128          
 129          /**********自定义字符3（16X16）写入CGRAM************/
 130          void WRCGRAM3(uchar addr)//单下划线加点
 131          {
 132   1              uchar i;
 133   1              for(i=0;i<2;)
 134   1              {
 135   2                      Write_Cmd(addr+i); //设定CGRAM地址
 136   2                      Write_Data(0xff);
 137   2                      Write_Data(0x00);
 138   2                      i++;
 139   2                      Write_Cmd(addr+i); //设定CGRAM地址
 140   2                      Write_Data(0x00);
 141   2                      Write_Data(0x00);
 142   2                      i++;
 143   2              }
 144   1              for(i=2;i<6;)
 145   1              {
 146   2                      Write_Cmd(addr+i); //设定CGRAM地址
 147   2                      Write_Data(0x00);
 148   2                      Write_Data(0x00);
 149   2                      i++;
 150   2              }
 151   1              Write_Cmd(addr+6);Write_Data(0x18);Write_Data(0x00);
 152   1              Write_Cmd(addr+7);Write_Data(0x3c);Write_Data(0x00);
 153   1              Write_Cmd(addr+8);Write_Data(0x3c);Write_Data(0x00);
 154   1              Write_Cmd(addr+9);Write_Data(0x18);Write_Data(0x00);
 155   1              for(i=10;i<16;i++)
 156   1              {
 157   2                      Write_Cmd(addr+i); //设定CGRAM地址
 158   2                      Write_Data(0x00);
 159   2                      Write_Data(0x00);
 160   2              }
 161   1      }
 162          
 163          /*************自定义字符4（16X16）写入CGRAM**********/
 164          void WRCGRAM4(uchar addr)//双下划线加点
 165          {
 166   1              uchar i;
 167   1              for(i=0;i<4;)
 168   1              {
 169   2                      Write_Cmd(addr+i); //设定CGRAM地址
 170   2                      Write_Data(0xff);
 171   2                      Write_Data(0x00);
 172   2                      i++;
 173   2                      Write_Cmd(addr+i); //设定CGRAM地址
 174   2                      Write_Data(0x00);
 175   2                      Write_Data(0x00);
 176   2                      i++;
 177   2              }
 178   1              Write_Cmd(addr+4);Write_Data(0x00);Write_Data(0x00);
 179   1          Write_Cmd(addr+5);Write_Data(0x00);Write_Data(0x00);
C51 COMPILER V9.52.0.0   DISPLAY                                                           06/02/2020 19:23:43 PAGE 4   

 180   1              Write_Cmd(addr+6);Write_Data(0x18);Write_Data(0x00);
 181   1              Write_Cmd(addr+7);Write_Data(0x3c);Write_Data(0x00);
 182   1              Write_Cmd(addr+8);Write_Data(0x3c);Write_Data(0x00);
 183   1              Write_Cmd(addr+9);Write_Data(0x18);Write_Data(0x00);
 184   1              for(i=10;i<16;i++)
 185   1              {
 186   2                      Write_Cmd(addr+i); //设定CGRAM地址
 187   2                      Write_Data(0x00);
 188   2                      Write_Data(0x00);
 189   2              }
 190   1      }
 191          
 192          /**********************绘图清屏********************/
 193          void CLEARGDRAM(void)
 194          {
 195   1              uchar j;
 196   1              uchar i;
 197   1              Write_Cmd(0x34);  //切换扩充指令集
 198   1              Write_Cmd(0x36);  //绘图显示开
 199   1              for(j=0;j<32;j++)
 200   1              {
 201   2                      Write_Cmd(0x80+j);//y坐标 共32行
 202   2                      Write_Cmd(0x80);//X坐标
 203   2                      for(i=0;i<32;i++)//
 204   2                      {
 205   3                              Write_Data(0x00);//绘空格32*8个即256空格
 206   3                      }
 207   2              }
 208   1      }
 209          
 210          //写入GDRAM 绘图,Y是Y绘图坐标,2个字节一行,CLONG是图形长度,以字节
 211          //为单位;HIGHT是图形高度,TAB是图形数据表.12864M的图形显示是相当于256*32.
 212          //由两屏128*32上下两屏组成，同一行的下屏的头地址紧接上屏的未地址。
 213          //绘图在串口输入时,会比在并口下的输入要慢一些
 214          void WRGDRAM(uchar Y1,uchar clong,uchar hight,uchar *TAB1)
 215          {
 216   1              uint k;
 217   1              uchar j;
 218   1              uchar i;
 219   1              Write_Cmd(0x34);
 220   1              Write_Cmd(0x36);
 221   1              for(j=0;j<hight;j++)//32
 222   1              { //先上半屏
 223   2                      Write_Cmd(Y1+j); //Y总坐标,即第几行
 224   2                      Write_Cmd(0x80);//X坐标0，即横数第0个字节开始写起               
 225   2                      for(i=0;i<clong;i++)//
 226   2                      {
 227   3                              Write_Data(TAB1[clong*j+i]);
 228   3                      }
 229   2              //后下半屏
 230   2                      for(k=0;k<clong;k++)//
 231   2                      {
 232   3                              Write_Data(TAB1[clong*(j+hight)+k]);
 233   3                      }
 234   2              }
 235   1              Write_Cmd(0x30);
 236   1      }
 237          
 238          /***********************插入光标*********************/ 
 239          void Cursor(uchar x,uchar y)
 240          {
 241   1              Write_Cmd(0x34);
C51 COMPILER V9.52.0.0   DISPLAY                                                           06/02/2020 19:23:43 PAGE 5   

 242   1              Write_Cmd(y);
 243   1              Write_Cmd(x);
 244   1      }
 245          
 246          /***********************插入图标*********************/ 
 247          void DISPIcon(uchar x,uchar y,uchar clong,uchar hight,uchar *Icon)
 248          {
 249   1              uchar i,j;
 250   1              for(i=0;i<hight;i++)
 251   1              {
 252   2                      if(y+i<32)
 253   2                              Cursor(0x80+x/16,0x80+y+i);//上半屏设定起始位置
 254   2                      else
 255   2                              Cursor(0x88+x/16,0x80-32+y+i);//下半屏设定起始位置
 256   2                      for(j=0;j<clong;j++)
 257   2                              Write_Data(Icon[clong*i+j]);
 258   2              }
 259   1              Write_Cmd(0x36);
 260   1              Write_Cmd(0x30);
 261   1      } 
 262          
 263          /**************LCD12864液晶初始化子程序*************/ 
 264          void Ini_Lcd(void)     
 265          {     
 266   1               PSB=1;     
 267   1               Delay_1ms(20);                  
 268   1               Write_Cmd(0x30);   //基本指令集     
 269   1               Delay_1ms(20);      
 270   1               Write_Cmd(0x02);   //地址归位     
 271   1               Delay_1ms(20);      
 272   1               Write_Cmd(0x0c);   //整体显示打开,游标关闭     
 273   1               Delay_1ms(20);      
 274   1               Write_Cmd(0x06);   //游标右移     
 275   1               Delay_1ms(20);      
 276   1               Write_Cmd(0x80);   //设定显示的起始地址     
 277   1               Delay_1ms(20);      
 278   1               Write_Cmd(0x01);   //清除显示 
 279   1       }
 280          
 281          /****************某一行首反白显示******************/
 282          void antibackgroud(uint hang)
 283          {
 284   1              Write_Cmd(0x80+8*(hang/2)+16*(hang%2));
 285   1              Write_Cmd(0x0F);
 286   1      }
 287          
 288          /*******************延时子程序  ********************/ 
 289          void Delay_1ms(uint x) 
 290          {  
 291   1              uint j,i;   
 292   1              for(j=0;j<x;j++)   
 293   1              {    
 294   2                      for(i=0;i<120;i++);   //延时X乘以120  
 295   2              }  
 296   1      }
 297          
 298          /*************LCD串口时指令和数据之间的延时********/
 299          void delayNus(uchar x)
 300          {
 301   1              uchar k;
 302   1              for(k=0;k<x;k++);
 303   1      }
C51 COMPILER V9.52.0.0   DISPLAY                                                           06/02/2020 19:23:43 PAGE 6   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1231    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      47
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
