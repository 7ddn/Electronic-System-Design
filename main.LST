C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /***********************************************
   2          基于STC15F2K60S2系列单片机C语言编程实现
   3          使用如下头文件，不用另外再包含"REG51.H"
   4          #include <STC15F2K60S2.h>
   5          ***********************************************/
   6          #include "sys_fun.h"
   7          #include "songs.h"
   8          #include "display.h"
   9          #include "sing.h"
  10          #include "string.h"
  11          
  12          uchar port_status;
  13          uchar key;
  14          unsigned char Count;
  15          double pitch = 7;
  16          char pitchFlag = 1;
  17          char currentPage = 1;
  18          unsigned char RECORDED[250];
  19          unsigned char SheetMid[250];
  20          unsigned char SheetUp[250];
  21          unsigned char SheetDown[250];
  22          unsigned int Sheet2Note[250];
  23          
  24          
  25          
  26          int lastStartCount = -1;
  27          int lastEndCount = 0;
  28          uchar lastNote = 0x00;
  29          
  30          void Time0_Int() interrupt 1
  31          {
  32   1         TH0 = 0xDC;
  33   1         TL0 = 0x00;
  34   1         Count++;   
  35   1      }
  36          
  37          void Playnote(uchar flag, int i){
  38   1        OPT_CHECK = 0xFF;
  39   1        while (OPT_CHECK&flag){
  40   2          bee_Speak = ~bee_Speak;
  41   2          Delay_xMs(NOTE[i-1]);
  42   2          OPT_CHECK = 0xFF;
  43   2        }
  44   1        pitchFlag = 1;
  45   1      }
  46          
  47          void PlayMusic();
  48          void ManualPlay();
  49          void MenuDisplay(int);
  50          void Record();
  51          int Recordnote(uchar, int, int);
  52          void PlayRecord();
  53          void GetSheet(int);
  54          
  55          void main()
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 2   

  56          {
  57   1        P5M1=0x00;
  58   1        P5M0=0x30;
  59   1        
  60   1        P4M1=0xC0;
  61   1        P4M0=0x00;
  62   1        
  63   1        P3M1=0x00;
  64   1        P3M0=0x00;
  65   1        
  66   1        Ini_Lcd();//液晶初始化子程序
  67   1        Disp(1,0,16,"浙江大学光电学院");//显示数据到LCD12864子程序      
  68   1        Disp(2,1,12,"电子线路设计");//显示数据到LCD12864子程序
  69   1        Disp(3,2,8,"87951197");//显示数据到LCD12864子程序
  70   1        Disp(4,1,12,"液晶显示成功");//显示数据到LCD12864子程序*/
  71   1        while(1)
  72   1        {
  73   2          s1_s2_check();
  74   2          P4M1=0x00;
  75   2          P4M0=0x00;
  76   2          Ini_Lcd();//液晶初始化子程序
  77   2          MenuDisplay(currentPage);
  78   2          KeyIO = 0xF0;
  79   2          while(1){
  80   3            s1_s2_check();
  81   3            if ((P1&0xF0)!=0xF0){
  82   4              Delay_xMs(100);
  83   4              if((KeyIO&0xF0)!=0xF0){
  84   5                key = scankey();
  85   5                switch (key)
  86   5                {
  87   6                case 11:
  88   6                  PlayMusic();
  89   6                  MenuDisplay(currentPage);
  90   6                  break;
  91   6                case 12:
  92   6                  ManualPlay();
  93   6                  MenuDisplay(currentPage);
  94   6                  break;
  95   6                case 13:
  96   6                  currentPage ++;
  97   6                  MenuDisplay(currentPage);
  98   6                  break;
  99   6                case 14:
 100   6                  Record();
 101   6                  MenuDisplay(currentPage);
 102   6                  break;
 103   6                case 21:
 104   6                  PlayRecord();
 105   6                  MenuDisplay(currentPage);
 106   6                  break;
 107   6                case 22:
 108   6                  currentPage --;
 109   6                  MenuDisplay(currentPage);
 110   6                  break;
 111   6                default:
 112   6                  break;
 113   6                }
 114   5              }
 115   4              Delay_xMs(2500);
 116   4            }
 117   3          }
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 3   

 118   2          Delay_xMs(2500);    
 119   2        }
 120   1      }
 121          
 122          /*******************定时器初始化********************/
 123          void Time0_Init()
 124          {
 125   1       TMOD = 0x01;
 126   1       IE   = 0x82;
 127   1       TH0  = 0xDC;
 128   1       TL0  = 0x00;  //11.0592MZ
 129   1      }
 130          /****************播放音乐*************************/
 131          void s1_s2_check(void)
 132          {
 133   1        if(P4&0x40) 
 134   1          DLED_1 =1;
 135   1        else  
 136   1          DLED_1 =0;
 137   1        if((P4&0x80)) 
 138   1          DLED_2 =1;
 139   1        else  
 140   1          DLED_2 =0;
 141   1      }
 142          
 143          /****************播放音乐*************************/
 144          void Play_Song(unsigned char i)
 145          {
 146   1        unsigned char Temp1,Temp2;
 147   1        unsigned int Addr,start;
 148   1        unsigned int lineCount, loc;
 149   1        unsigned char lrc[20];
 150   1      
 151   1        lineCount = 1;
 152   1        loc = 0;
 153   1        start = INDEX[i];
 154   1        Addr = start;  
 155   1        GetSheet(Addr);
 156   1        
 157   1        strncpy(lrc,  SheetUp, 16);
 158   1        Disp(2,0,16,lrc);
 159   1        strncpy(lrc, SheetMid, 16);
 160   1        Disp(3,0,16,lrc);
 161   1        strncpy(lrc, SheetDown, 16);
 162   1        Disp(4,0,16,lrc);
 163   1        Count = 0;    
 164   1      
 165   1        while(1)
 166   1        {
 167   2          
 168   2          Temp1 = SONG[Addr++];
 169   2            if ( Temp1 == 0xFF )
 170   2            {
 171   3              TR0 = 0;                 
 172   3              Delay_xMs(100);
 173   3            }
 174   2            else if ( Temp1 == 0x00 )   
 175   2            {
 176   3              return;
 177   3            }
 178   2            else
 179   2            {
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 4   

 180   3              Temp2 = SONG[Addr++];
 181   3              TR0 = 1;
 182   3            while(1)
 183   3            {
 184   4                bee_Speak = ~bee_Speak;
 185   4                Delay_xMs(Temp1);
 186   4                if ( Temp2 == Count )
 187   4                {
 188   5                if (Sheet2Note[Addr - start] > lineCount*16){
 189   6                  loc = loc + 16;
 190   6                  lineCount++;
 191   6                  strncpy(lrc, SheetUp+loc, 16);
 192   6                  Disp(2,0,16,lrc);
 193   6                  strncpy(lrc, SheetMid+loc, 16);
 194   6                  Disp(3,0,16,lrc);
 195   6                  strncpy(lrc, SheetDown+loc, 16);
 196   6                  Disp(4,0,16,lrc);
 197   6                }
 198   5                    Count = 0;
 199   5                    break;
 200   5                }
 201   4              KeyIO=0xF0;
 202   4              if ((P1&0xf0)!=0xf0) return;
 203   4            }
 204   3            }
 205   2        }
 206   1        bee_Speak = 0;  //关闭蜂鸣器
 207   1      }
 208          
 209          
 210          /*****************检测控制端口的状态*****************/
 211          uchar ctrl_port_check(void)
 212          {
 213   1          SW_CTRL = 0xFF;
 214   1          return  SW_CTRL&0xF0;
 215   1      }
 216          
 217          uchar scankey(void)//矩阵键盘翻转扫描
 218          {
 219   1        uint keyvalue=0;
 220   1        uchar temp1,temp2,keycode;
 221   1      
 222   1        KeyIO=0xf0;   //行置0列置1
 223   1        temp1=KeyIO&0xf0;
 224   1        if((temp1&0xf0)==0xf0) return(0);  //若无键按下返回0
 225   1        KeyIO=0x0f;
 226   1        temp2=KeyIO&0x0f;            //若有键按下，行置1列置0
 227   1        keycode=~(temp1|temp2);        //获得键盘码
 228   1        switch(keycode)            //根据键盘码返回键值
 229   1        {
 230   2          case 0x11:return(11);break;
 231   2          case 0x21:return(12);break;
 232   2          case 0x41:return(13);break;
 233   2          case 0x81:return(14);break;
 234   2          case 0x12:return(21);break;
 235   2          case 0x22:return(22);break;
 236   2          case 0x42:return(23);break;
 237   2          case 0x82:return(24);break;
 238   2          case 0x14:return(31);break;
 239   2          case 0x24:return(32);break;
 240   2          case 0x44:return(33);break;
 241   2          case 0x84:return(34);break;
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 5   

 242   2          case 0x18:return(41);break;
 243   2          case 0x28:return(42);break;
 244   2          case 0x48:return(43);break;
 245   2          case 0x88:return(44);break;
 246   2          default:  return(0);break;
 247   2        }
 248   1        return(0);
 249   1      }
 250             
 251          /****************延迟毫秒数************************/
 252          void Delay_xMs(unsigned int x)
 253          {
 254   1          unsigned int i,j;
 255   1          for( i = 0;i < x;i++ )
 256   1          {
 257   2              for( j = 0;j<2;j++ );
 258   2          }
 259   1      }
 260          
 261          // 菜单功能函数
 262          
 263          void MenuDisplay(int page){
 264   1        Ini_Lcd();
 265   1        switch (page)
 266   1        {
 267   2        case 1:
 268   2          Disp(1,3,4,"菜单");
 269   2          Disp(2,0,10,"1.播放音乐");
 270   2          Disp(3,0,10,"2.弹奏模式");
 271   2          Disp(4,0,8,"3.下一页");
 272   2          break;
 273   2        case 2:
 274   2          Disp(1,3,4,"菜单");
 275   2          Disp(2,0,10,"4.录音模式");
 276   2          Disp(3,0,10,"5.播放录音");
 277   2          Disp(4,0,8,"6.上一页");
 278   2        default:
 279   2          break;
 280   2        }
 281   1      
 282   1      }
 283          
 284          void PlayMusic(){
 285   1        Ini_Lcd();
 286   1        Disp(1,2,8,"音乐播放");
 287   1        Time0_Init();
 288   1        Play_Song(0);
 289   1      }
 290          
 291          void ManualPlay(){
 292   1        s1_s2_check();
 293   1        Ini_Lcd();
 294   1        Disp(1,2,8,"演奏模式");
 295   1        if (pitch!=0) Disp(2,0,10,"2.降低音高");
 296   1        if (pitch!=14) Disp(3,0,10,"3.提高音高");
 297   1        Disp(4,1,12,"按任意键返回");
 298   1        while(1) {
 299   2          KeyIO=0xF0;
 300   2          if ((P1&0xf0)!=0xf0) {
 301   3            Delay_xMs(100);
 302   3            if((KeyIO&0xF0)!=0xF0){
 303   4              key = scankey();
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 6   

 304   4              switch (key){
 305   5                case 12:
 306   5                  if (!pitchFlag) break;
 307   5                  if (pitch>0) pitch-=7;
 308   5                  if (pitch==0) Disp(2,0,16,"音高已经是最低了");
 309   5                  Disp(3,0,10,"3.提高音高");
 310   5                  pitchFlag = 0;
 311   5                  break;
 312   5                case 13:
 313   5                  if (!pitchFlag) break;
 314   5                  if (pitch<14) pitch+=7;
 315   5                  if (pitch==14) Disp(3,0,16,"音高已经是最高了");
 316   5                  Disp(2,0,10,"2.降低音高");
 317   5                  pitchFlag = 0;
 318   5                  break;
 319   5                default:
 320   5                  return;
 321   5                  break;
 322   5              }
 323   4            }
 324   3            Delay_xMs(100);
 325   3          }
 326   2          OPT_CHECK = 0xFF;
 327   2          if (OPT_CHECK&0x01) Playnote(0x01, 7+pitch);
 328   2           else if (OPT_CHECK&0x02) Playnote(0x02, 6+pitch);
 329   2           else if (OPT_CHECK&0x04) Playnote(0x04, 5+pitch);
 330   2           else if (OPT_CHECK&0x08) Playnote(0x08, 4+pitch);
 331   2           else if (OPT_CHECK&0x10) Playnote(0x10, 3+pitch);
 332   2           else if (OPT_CHECK&0x20) Playnote(0x20, 2+pitch);
 333   2           else if (OPT_CHECK&0x40) Playnote(0x40, 1+pitch);  
 334   2        }
 335   1      }
 336          
 337          void Record(){
 338   1        char continueFlag = 0;
 339   1        int currentIndex = 0;
 340   1        lastEndCount = 0;
 341   1        lastStartCount = -1;
 342   1        lastNote = 0x00;
 343   1      
 344   1        s1_s2_check();
 345   1        Ini_Lcd();
 346   1        Disp(1,2,8,"录音模式");
 347   1        Disp(2,0,10,"1.开始录音");
 348   1        
 349   1        Disp(4,1,12,"按其他键返回");
 350   1        
 351   1        while(!continueFlag) {
 352   2          KeyIO=0xF0;
 353   2          if ((P1&0xf0)!=0xf0) {
 354   3            Delay_xMs(100);
 355   3            if((KeyIO&0xF0)!=0xF0){
 356   4              key = scankey();
 357   4              switch (key){
 358   5                case 11: continueFlag = 1;break;
 359   5                default: return;
 360   5              }
 361   4            }
 362   3            Delay_xMs(100);
 363   3          }
 364   2        }
 365   1        memset(RECORDED,0x00,sizeof(RECORDED));
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 7   

 366   1        Disp(2,0,6,"录音中");
 367   1        Disp(3,0,10,"2.结束录音");
 368   1        Count = 0;
 369   1        Time0_Init();
 370   1        while(1){
 371   2          KeyIO=0xF0;
 372   2          if ((P1&0xf0)!=0xf0) {
 373   3            Delay_xMs(100);
 374   3            if((KeyIO&0xF0)!=0xF0){
 375   4              key = scankey();
 376   4              switch (key){
 377   5                case 12: 
 378   5                  Disp(3,0,8,"录音完成");
 379   5                  RECORDED[currentIndex] = lastNote;
 380   5                  RECORDED[currentIndex+1] = lastEndCount - lastStartCount; 
 381   5                  return;
 382   5                default: return;
 383   5              }
 384   4            }
 385   3            Delay_xMs(100);
 386   3          }
 387   2          OPT_CHECK = 0xFF;
 388   2          if (OPT_CHECK&0x01) currentIndex = Recordnote(0x01, 7+pitch, currentIndex);
 389   2           else if (OPT_CHECK&0x02) currentIndex  = Recordnote(0x02, 6+pitch, currentIndex);
 390   2           else if (OPT_CHECK&0x04) currentIndex  = Recordnote(0x04, 5+pitch, currentIndex);
 391   2           else if (OPT_CHECK&0x08) currentIndex  = Recordnote(0x08, 4+pitch, currentIndex);
 392   2           else if (OPT_CHECK&0x10) currentIndex  = Recordnote(0x10, 3+pitch, currentIndex);
 393   2           else if (OPT_CHECK&0x20) currentIndex  = Recordnote(0x20, 2+pitch, currentIndex);
 394   2           else if (OPT_CHECK&0x40) currentIndex  = Recordnote(0x40, 1+pitch, currentIndex);  
 395   2        }
 396   1        
 397   1      }
 398          
 399          int Recordnote(uchar flag, int i, int index){
 400   1        if (lastStartCount != -1){
 401   2          RECORDED[index] = lastNote;
 402   2          RECORDED[index+1] = Count - lastStartCount;
 403   2        }
 404   1        OPT_CHECK = 0xFF;
 405   1        lastStartCount = Count;
 406   1        while (OPT_CHECK&flag){
 407   2          bee_Speak = ~bee_Speak;
 408   2          Delay_xMs(NOTE[i-1]);
 409   2          OPT_CHECK = 0xFF;
 410   2        }
 411   1        lastEndCount = Count;
 412   1        lastNote = NOTE[i-1];
 413   1        return index+2;
 414   1      }
 415          
 416          void PlayRecord()
 417          {
 418   1        unsigned char Temp1,Temp2;
 419   1        unsigned int Addr;
 420   1      
 421   1        s1_s2_check();
 422   1        Ini_Lcd();
 423   1        Disp(1,2,8,"播放录音");
 424   1        Disp(4,1,12,"按任意键返回");
 425   1      
 426   1        Count = 0;      
 427   1        Time0_Init();
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 8   

 428   1        Addr = 0;  
 429   1        while(1)
 430   1        {
 431   2          Temp1 = RECORDED[Addr++];
 432   2            if ( Temp1 == 0xFF )  
 433   2            {
 434   3              TR0 = 0;                 
 435   3              Delay_xMs(100);
 436   3            }
 437   2            else if ( Temp1 == 0x00 )   
 438   2            {
 439   3              return;
 440   3            }
 441   2            else
 442   2            {
 443   3              Temp2 = RECORDED[Addr++];
 444   3              TR0 = 1;
 445   3            while(1)
 446   3            {
 447   4                bee_Speak = ~bee_Speak;
 448   4                Delay_xMs(Temp1);
 449   4                if ( Temp2 == Count )
 450   4                {
 451   5                   Count = 0;
 452   5                   break;
 453   5                }
 454   4              KeyIO=0xF0;
 455   4              if ((P1&0xf0)!=0xf0) return;
 456   4            }
 457   3            }
 458   2        }
 459   1        bee_Speak = 0;  //关闭蜂鸣器
 460   1      }
 461          
 462          void GetSheet(int start){
 463   1        unsigned char Temp1,Temp2;
 464   1        unsigned int Addr, Index;
 465   1      
 466   1        Addr = start; Index = 0;
 467   1        Temp1 = SONG[Addr];
 468   1        while (Temp1 != 0x00){
 469   2          Sheet2Note[Addr - start] = Index;
 470   2          switch (Temp1){
 471   3            case 0x60:
 472   3            case 0x30:
 473   3            case 0x18:
 474   3              SheetMid[Index] = '1';
 475   3              break;
 476   3            case 0x56:
 477   3            case 0x2b:
 478   3            case 0x15:
 479   3              SheetMid[Index] = '2';
 480   3              break;
 481   3            case 0x4C:
 482   3            case 0x26:
 483   3            case 0x13:
 484   3              SheetMid[Index] = '3';
 485   3              break;
 486   3            case 0x48:
 487   3            case 0x24:
 488   3            case 0x12:
 489   3              SheetMid[Index] = '4';
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 9   

 490   3              break;
 491   3            case 0x40:
 492   3            case 0x20:
 493   3            case 0x10:
 494   3              SheetMid[Index] = '5';
 495   3              break;
 496   3            case 0x39:
 497   3            case 0x1C:
 498   3            case 0x0E:
 499   3              SheetMid[Index] = '6';
 500   3              break;
 501   3            case 0x32:
 502   3            case 0x19:
 503   3            case 0x0D:
 504   3              SheetMid[Index] = '7';
 505   3              break;
 506   3            default:
 507   3              Addr++;
 508   3              Temp1 = SONG[Addr];
 509   3              continue;
 510   3              break;
 511   3          }
 512   2          if (Temp1 == 0xFF) continue;
 513   2          if (Temp1 >=0x32){
 514   3            SheetDown[Index] = '.';
 515   3            SheetUp[Index] = ' ';
 516   3          } else if (Temp1 <= 0x18){
 517   3            SheetUp[Index] = '.';
 518   3            SheetDown[Index] = ' ';
 519   3          } else {
 520   3            SheetUp[Index] = ' ';
 521   3            SheetDown[Index] = ' ';
 522   3          }
 523   2          Addr++;
 524   2          Temp2 = SONG[Addr];
 525   2          if (Temp2 == 0x20) {
 526   3            Addr++;
 527   3            Index++;
 528   3            Temp1 = SONG[Addr];
 529   3            continue;
 530   3          }
 531   2          else if (Temp2 == 0x10)
 532   2            SheetDown[Index] = '-';
 533   2          else if (Temp2 == 0x08)
 534   2            SheetDown[Index] = '=';
 535   2          else if (Temp2 == 0x30){
 536   3            Index++;
 537   3            SheetMid[Index] = '.';
 538   3            SheetDown[Index] = ' ';
 539   3            SheetUp[Index] = ' ';
 540   3          } else if (Temp2 >= 0x40){
 541   3            Temp2 = Temp2 - 0x20;
 542   3            while (Temp2 >= 0x20){
 543   4              Index++;
 544   4              SheetMid[Index] = '-';
 545   4              SheetDown[Index] = ' ';
 546   4              SheetUp[Index] = ' ';
 547   4              Temp2 = Temp2 - 0x20;
 548   4            }
 549   3          }
 550   2          Addr++;
 551   2          Index++;
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 17:59:25 PAGE 10  

 552   2          Temp1 = SONG[Addr];
 553   2        }
 554   1        return;
 555   1      }
*** WARNING C294 IN LINE 118 OF main.c: unreachable code
*** WARNING C294 IN LINE 206 OF main.c: unreachable code
*** WARNING C294 IN LINE 248 OF main.c: unreachable code
*** WARNING C294 IN LINE 459 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4029    ----
   CONSTANT SIZE    =    463    ----
   XDATA SIZE       =   1540      55
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
