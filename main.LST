C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /***********************************************
   2          基于STC15F2K60S2系列单片机C语言编程实现
   3          使用如下头文件，不用另外再包含"REG51.H"
   4          #include <STC15F2K60S2.h>
   5          ***********************************************/
   6          #include "sys_fun.h"
   7          #include "songs.h"
   8          #include "display.h"
   9          #include "sing.h"
  10          #include "string.h"
  11          #include <stdlib.h>
  12          #include "image.h"
  13          #include "bootup.h"
  14          #include "utils.h"
  15          
  16          uchar port_status;
  17          uchar key;
  18          unsigned char Count;
  19          double pitch = 7;
  20          char currentPage = 1;
  21          
  22          unsigned char RECORDED[250];
  23          unsigned char SheetMid[250];
  24          unsigned char SheetUp[250];
  25          unsigned char SheetDown[250];
  26          unsigned int Sheet2Note[250];
  27          
  28          
  29          int lastStartCount = -1;
  30          int lastEndCount = 0;
  31          uchar lastNote = 0x00;
  32          
  33          unsigned char code gImage_1[1030]={
  34          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  35          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  36          0xFF,0xFF,0xFF,0xFF,0xA0,0x00,0xFF,0xF0,0x00,0x7F,0x00,0x00,0x03,0xFF,0xFF,0xFF,
  37          0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x1F,0xE0,0x00,0x38,0x00,0x00,0x03,0xFF,0xFF,0xFF,
  38          0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x0F,0xE0,0x00,0x70,0x00,0x00,0x07,0xFF,0xFF,0xFF,
  39          0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x07,0xC0,0x03,0xE0,0x00,0x00,0x07,0xFF,0xFF,0xFF,
  40          0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x03,0xC0,0x0F,0xC0,0x00,0x00,0x1F,0xFF,0xFF,0xFF,
  41          0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x03,0xC0,0x07,0xC0,0x00,0x00,0x3F,0xFF,0xFF,0xFF,
  42          0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x01,0xC0,0x07,0x80,0x00,0xFB,0xFF,0xFF,0xFF,0xFF,
  43          0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x01,0x80,0x03,0x80,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,
  44          0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x80,0x03,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,
  45          0xFF,0xFF,0xFF,0xFF,0xEF,0x80,0x00,0x00,0x03,0x00,0x00,0x01,0x7F,0xFF,0xFF,0xFF,
  46          0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,
  47          0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
  48          0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,
  49          0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,
  50          0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,
  51          0xFF,0xFF,0xFF,0xFF,0xFC,0x60,0x00,0x00,0x00,0x00,0x04,0x1F,0xFF,0xFF,0xFF,0xFF,
  52          0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,
  53          0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,
  54          0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,
  55          0xFF,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0xBF,0xFF,0xFF,0xFF,0xFF,
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 2   

  56          0xFF,0xFF,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,
  57          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,
  58          0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,
  59          0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,
  60          0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x4F,0xFF,0xFF,0xFF,0xFF,0xFF,
  61          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  62          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  63          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  64          0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,
  65          0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,
  66          0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,
  67          0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,
  68          0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,
  69          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  70          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  71          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  72          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  73          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  74          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  75          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  76          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  77          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  78          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  79          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  80          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  81          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  82          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  83          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  84          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  85          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  86          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  87          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  88          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC0,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  89          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  90          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE0,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  91          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  92          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  93          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  94          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  95          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  96          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  97          0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  98          };
  99          
 100          
 101          
 102          void Time0_Int() interrupt 1
 103          {
 104   1         TH0 = 0xDC;
 105   1         TL0 = 0x00;
 106   1         Count++;   
 107   1      }
 108          
 109          
 110          void MenuDisplay(int);
 111          void Record();
 112          int Recordnote(uchar, int, int);
 113          void PlayRecord();
 114          void GetSheet(int);
 115          void TestMode();
 116          void showNote(uchar, int, int);
 117          
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 3   

 118          
 119          void main()
 120          {
 121   1      
 122   1        Ini_Lcd();
 123   1        WRGDRAM(0x80,16,32,gImage_1);
 124   1        P5M1=0x00;
 125   1        P5M0=0x30;
 126   1      
 127   1        P4M1=0xC0;
 128   1        P4M0=0x00;
 129   1        
 130   1        P3M1=0x00;
 131   1        P3M0=0x00;
 132   1        
 133   1        Ini_Lcd();//液晶初始化子程序
 134   1        Disp(1,0,16,"浙江大学光电学院");//显示数据到LCD12864子程序      
 135   1        Disp(2,1,12,"电子线路设计");//显示数据到LCD12864子程序
 136   1        Disp(3,2,8,"87951197");//显示数据到LCD12864子程序
 137   1        Disp(4,1,12,"液晶显示成功");//显示数据到LCD12864子程序*/
 138   1      
 139   1        musicLock();
 140   1      
 141   1        while(1)
 142   1        {
 143   2          s1_s2_check();
 144   2          P4M1=0x00;
 145   2          P4M0=0x00;
 146   2          Ini_Lcd();//液晶初始化子程序
 147   2          MenuDisplay(currentPage);
 148   2          while(1){
 149   3            KeyIO = 0xF0;
 150   3            s1_s2_check();
 151   3            if ((P1&0xF0)!=0xF0){
 152   4              Delay_xMs(100);
 153   4              if((KeyIO&0xF0)!=0xF0){
 154   5                key = scankey();
 155   5                while((KeyIO&0xF0)!=0xF0) KeyIO = 0xF0;
 156   5                switch (key)
 157   5                {
 158   6                case 11:
 159   6                  PlayMusic(); //音乐播放
 160   6                  bee_Speak = 0;
 161   6                  MenuDisplay(currentPage);
 162   6                  break;
 163   6                case 12:
 164   6                  ManualPlay(); //演奏模式
 165   6                  MenuDisplay(currentPage);
 166   6                  break;
 167   6                case 13:
 168   6                  currentPage = 2; //1到2
 169   6                  MenuDisplay(currentPage);
 170   6                  break;
 171   6                case 14:
 172   6                  Record(); // 录音模式
 173   6                  MenuDisplay(currentPage);
 174   6                  break;
 175   6                case 21:
 176   6                  PlayRecord(); // 播放录音
 177   6                  MenuDisplay(currentPage);
 178   6                  break;
 179   6                case 22:
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 4   

 180   6                  currentPage = 1; // 2到1
 181   6                  MenuDisplay(currentPage);
 182   6                  break;
 183   6                case 23:
 184   6                  currentPage = 3; // 2到3
 185   6                  MenuDisplay(currentPage);
 186   6                  break;
 187   6                case 24:
 188   6                  TestMode();
 189   6                  MenuDisplay(currentPage);
 190   6                  break;
 191   6                case 31:
 192   6                  currentPage = 2; // 3到2
 193   6                  MenuDisplay(currentPage);
 194   6                  break;
 195   6                default:
 196   6                  break;
 197   6                }
 198   5              }
 199   4              Delay_xMs(2500);
 200   4            }
 201   3          }
 202   2          Delay_xMs(2500);    
 203   2        }
 204   1      }
 205          
 206          /*******************定时器初始化********************/
 207          void Time0_Init()
 208          {
 209   1       TMOD = 0x01;
 210   1       IE   = 0x82;
 211   1       TH0  = 0xDC;
 212   1       TL0  = 0x00;  //11.0592MZ
 213   1      }
 214          /****************播放音乐*************************/
 215          void s1_s2_check(void)
 216          {
 217   1        if(P4&0x40) 
 218   1          DLED_1 =1;
 219   1        else  
 220   1          DLED_1 =0;
 221   1        if((P4&0x80)) 
 222   1          DLED_2 =1;
 223   1        else  
 224   1          DLED_2 =0;
 225   1      }
 226          
 227          /****************播放音乐*************************/
 228          void Play_Song(unsigned char i)
 229          {
 230   1        unsigned char Temp1,Temp2;
 231   1        unsigned int Addr,start;
 232   1        unsigned int lineCount, loc;
 233   1        unsigned char lrc[20];
 234   1      
 235   1        lineCount = 1;
 236   1        loc = 0;
 237   1        start = INDEX[i];
 238   1        Addr = start;  
 239   1        GetSheet(Addr);
 240   1        
 241   1        strncpy(lrc,  SheetUp, 16);
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 5   

 242   1        Disp(2,0,16,lrc);
 243   1        strncpy(lrc, SheetMid, 16);
 244   1        Disp(3,0,16,lrc);
 245   1        strncpy(lrc, SheetDown, 16);
 246   1        Disp(4,0,16,lrc);
 247   1        Count = 0;    
 248   1      
 249   1        while(1)
 250   1        {
 251   2          
 252   2          Temp1 = SONG[Addr++];
 253   2            if ( Temp1 == 0xFF )
 254   2            {
 255   3              TR0 = 0;                 
 256   3              Delay_xMs(100);
 257   3            }
 258   2            else if ( Temp1 == 0x00 )   
 259   2            {
 260   3              return;
 261   3            }
 262   2            else
 263   2            {
 264   3              Temp2 = SONG[Addr++];
 265   3              TR0 = 1;
 266   3            while(1)
 267   3            {
 268   4                bee_Speak = ~bee_Speak;
 269   4                Delay_xMs(Temp1);
 270   4                if ( Temp2 == Count )
 271   4                {
 272   5                if (Sheet2Note[Addr - start] > lineCount*16){
 273   6                  loc = loc + 16;
 274   6                  lineCount++;
 275   6                  strncpy(lrc, SheetUp+loc, 16);
 276   6                  Disp(2,0,16,lrc);
 277   6                  strncpy(lrc, SheetMid+loc, 16);
 278   6                  Disp(3,0,16,lrc);
 279   6                  strncpy(lrc, SheetDown+loc, 16);
 280   6                  Disp(4,0,16,lrc);
 281   6                }
 282   5                    Count = 0;
 283   5                    break;
 284   5                }
 285   4              KeyIO=0xF0;
 286   4              if ((P1&0xf0)!=0xf0) return;
 287   4            }
 288   3            }
 289   2        }
 290   1        bee_Speak = 0;  //关闭蜂鸣器
 291   1      }
 292          
 293          
 294          /*****************检测控制端口的状态*****************/
 295          uchar ctrl_port_check(void)
 296          {
 297   1          SW_CTRL = 0xFF;
 298   1          return  SW_CTRL&0xF0;
 299   1      }
 300          
 301          uchar scankey(void)//矩阵键盘翻转扫描
 302          {
 303   1        uint keyvalue=0;
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 6   

 304   1        uchar temp1,temp2,keycode;
 305   1      
 306   1        KeyIO=0xf0;   //行置0列置1
 307   1        temp1=KeyIO&0xf0;
 308   1        if((temp1&0xf0)==0xf0) return(0);  //若无键按下返回0
 309   1        KeyIO=0x0f;
 310   1        temp2=KeyIO&0x0f;            //若有键按下，行置1列置0
 311   1        keycode=~(temp1|temp2);        //获得键盘码
 312   1        switch(keycode)            //根据键盘码返回键值
 313   1        {
 314   2          case 0x11:return(11);break;
 315   2          case 0x21:return(12);break;
 316   2          case 0x41:return(13);break;
 317   2          case 0x81:return(14);break;
 318   2          case 0x12:return(21);break;
 319   2          case 0x22:return(22);break;
 320   2          case 0x42:return(23);break;
 321   2          case 0x82:return(24);break;
 322   2          case 0x14:return(31);break;
 323   2          case 0x24:return(32);break;
 324   2          case 0x44:return(33);break;
 325   2          case 0x84:return(34);break;
 326   2          case 0x18:return(41);break;
 327   2          case 0x28:return(42);break;
 328   2          case 0x48:return(43);break;
 329   2          case 0x88:return(44);break;
 330   2          default:  return(0);break;
 331   2        }
 332   1        return(0);
 333   1      }
 334             
 335          /****************延迟毫秒数************************/
 336          void Delay_xMs(unsigned int x)
 337          {
 338   1          unsigned int i,j;
 339   1          for( i = 0;i < x;i++ )
 340   1          {
 341   2              for( j = 0;j<2;j++ );
 342   2          }
 343   1      }
 344          
 345          // 菜单功能函数
 346          
 347          void MenuDisplay(int page){
 348   1        Ini_Lcd();
 349   1        switch (page)
 350   1        {
 351   2        case 1:
 352   2          Disp(1,3,4,"菜单");
 353   2          Disp(2,0,10,"1.播放音乐");
 354   2          Disp(3,0,10,"2.弹奏模式");
 355   2          Disp(4,0,8,"3.下一页");
 356   2          break;
 357   2        case 2:
 358   2          Disp(1,0,10,"4.录音模式");
 359   2          Disp(2,0,10,"5.播放录音");
 360   2          Disp(3,0,8,"6.上一页");
 361   2          Disp(4,0,8,"7.下一页");
 362   2          break;
 363   2        case 3:
 364   2          Disp(1,0,10,"8.练习模式");
 365   2          Disp(2,0,8,"9.上一页");
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 7   

 366   2          break;
 367   2        default:
 368   2          break;
 369   2        }
 370   1      
 371   1      }
 372          
 373          
 374          
 375          // 录制
 376          
 377          void Record(){
 378   1        char continueFlag = 0;
 379   1        int currentIndex = 0;
 380   1        lastEndCount = 0;
 381   1        lastStartCount = -1;
 382   1        lastNote = 0x00;
 383   1      
 384   1        s1_s2_check();
 385   1        Ini_Lcd();
 386   1        Disp(1,2,8,"录音模式");
 387   1        Disp(2,0,10,"1.开始录音");
 388   1        
 389   1        Disp(4,1,12,"按其他键返回");
 390   1        
 391   1        while(!continueFlag) {
 392   2          KeyIO=0xF0;
 393   2          if ((P1&0xf0)!=0xf0) {
 394   3            Delay_xMs(100);
 395   3            if((KeyIO&0xF0)!=0xF0){
 396   4              key = scankey();
 397   4              switch (key){
 398   5                case 11: continueFlag = 1;break;
 399   5                default: return;
 400   5              }
 401   4            }
 402   3            Delay_xMs(100);
 403   3          }
 404   2        }
 405   1        memset(RECORDED,0x00,sizeof(RECORDED));
 406   1        Ini_Lcd();
 407   1        Disp(4,0,16,"按任意键结束录音");
 408   1        Count = 0;
 409   1        Time0_Init();
 410   1        while(1){
 411   2          KeyIO=0xF0;
 412   2          if ((P1&0xf0)!=0xf0) {
 413   3            Delay_xMs(100);
 414   3            if((KeyIO&0xF0)!=0xF0){
 415   4              key = scankey();
 416   4              Disp(3,0,8,"录音完成");
 417   4              RECORDED[currentIndex] = lastNote;
 418   4              RECORDED[currentIndex+1] = lastEndCount - lastStartCount; 
 419   4              return;
 420   4            }
 421   3            Delay_xMs(100);
 422   3          }
 423   2          OPT_CHECK = 0xFF;
 424   2          s1_s2_check();
 425   2          pitch = 7 + DLED_2*7 - DLED_1*7;
 426   2          if (pitch == 14){
 427   3            Disp(2,3,4,"高音");
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 8   

 428   3          } else if (pitch == 7){
 429   3            Disp(2,3,4,"中音");
 430   3          } else if (pitch == 0){
 431   3            Disp(2,3,4,"低音");
 432   3          }
 433   2          if (OPT_CHECK&0x01) currentIndex = Recordnote(0x01, 7+pitch, currentIndex);
 434   2          else if (OPT_CHECK&0x02) currentIndex  = Recordnote(0x02, 6+pitch, currentIndex);
 435   2          else if (OPT_CHECK&0x04) currentIndex  = Recordnote(0x04, 5+pitch, currentIndex);
 436   2          else if (OPT_CHECK&0x08) currentIndex  = Recordnote(0x08, 4+pitch, currentIndex);
 437   2          else if (OPT_CHECK&0x10) currentIndex  = Recordnote(0x10, 3+pitch, currentIndex);
 438   2          else if (OPT_CHECK&0x20) currentIndex  = Recordnote(0x20, 2+pitch, currentIndex);
 439   2          else if (OPT_CHECK&0x40) currentIndex  = Recordnote(0x40, 1+pitch, currentIndex); 
 440   2        }
 441   1        
 442   1      }
 443          
 444          //音符录制
 445          
 446          int Recordnote(uchar flag, int i, int index){
 447   1        char str[2] = "7";
 448   1      
 449   1        if (lastStartCount != -1){
 450   2          RECORDED[index] = lastNote;
 451   2          RECORDED[index+1] = Count - lastStartCount;
 452   2        }
 453   1      
 454   1        if (i%7!=0) itoa(i%7,str,10);
 455   1        Disp(3,4,1,str);
 456   1        
 457   1        
 458   1        OPT_CHECK = 0xFF; 
 459   1        lastStartCount = Count;
 460   1        while (OPT_CHECK&flag){
 461   2          bee_Speak = ~bee_Speak;
 462   2          Delay_xMs(NOTE[i-1]);
 463   2          OPT_CHECK = 0xFF;
 464   2        }
 465   1        lastEndCount = Count;
 466   1        lastNote = NOTE[i-1];
 467   1        return index+2;
 468   1      }
 469          
 470          // 录音播放
 471          
 472          void PlayRecord()
 473          {
 474   1        unsigned char Temp1,Temp2;
 475   1        unsigned int Addr;
 476   1        char str[10];
 477   1      
 478   1        s1_s2_check();
 479   1        Ini_Lcd();
 480   1        Disp(1,2,8,"播放录音");
 481   1        Disp(4,1,12,"按任意键返回");
 482   1      
 483   1             
 484   1        Time0_Init();
 485   1        Addr = 2;  
 486   1        Count = 0; 
 487   1        
 488   1        while(1)
 489   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 9   

 490   2          Temp1 = RECORDED[Addr++];
 491   2            if ( Temp1 == 0xFF )  
 492   2            {
 493   3              TR0 = 0;                 
 494   3              Delay_xMs(100);
 495   3            }
 496   2            else if ( Temp1 == 0x00 )   
 497   2            {
 498   3              return;
 499   3            }
 500   2            else
 501   2            {
 502   3            showNote(Temp1,2,3);
 503   3            Temp2 = RECORDED[Addr++];
 504   3              TR0 = 1;
 505   3            while(1)
 506   3            {
 507   4                bee_Speak = ~bee_Speak;
 508   4                Delay_xMs(Temp1);
 509   4                if ( Temp2 == Count )
 510   4                {
 511   5                   Count = 0;
 512   5                   break;
 513   5                }
 514   4              KeyIO=0xF0;
 515   4              if ((P1&0xf0)!=0xf0) return;
 516   4            }
 517   3            }
 518   2        }
 519   1        bee_Speak = 0;  //关闭蜂鸣器
 520   1      }
*** WARNING C280 IN LINE 476 OF main.c: 'str': unreferenced local variable
 521          
 522          // 简谱生成
 523          
 524          void GetSheet(int start){
 525   1        unsigned char Temp1,Temp2;
 526   1        unsigned int Addr, Index;
 527   1      
 528   1        Addr = start; Index = 0;
 529   1        Temp1 = SONG[Addr];
 530   1        while (Temp1 != 0x00){
 531   2          Sheet2Note[Addr - start] = Index;
 532   2          switch (Temp1){
 533   3            case 0x60:
 534   3            case 0x30:
 535   3            case 0x18:
 536   3              SheetMid[Index] = '1';
 537   3              break;
 538   3            case 0x56:
 539   3            case 0x2b:
 540   3            case 0x15:
 541   3              SheetMid[Index] = '2';
 542   3              break;
 543   3            case 0x4C:
 544   3            case 0x26:
 545   3            case 0x13:
 546   3              SheetMid[Index] = '3';
 547   3              break;
 548   3            case 0x48:
 549   3            case 0x24:
 550   3            case 0x12:
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 10  

 551   3              SheetMid[Index] = '4';
 552   3              break;
 553   3            case 0x40:
 554   3            case 0x20:
 555   3            case 0x10:
 556   3              SheetMid[Index] = '5';
 557   3              break;
 558   3            case 0x39:
 559   3            case 0x1C:
 560   3            case 0x0E:
 561   3              SheetMid[Index] = '6';
 562   3              break;
 563   3            case 0x32:
 564   3            case 0x19:
 565   3            case 0x0D:
 566   3              SheetMid[Index] = '7';
 567   3              break;
 568   3            default:
 569   3              Addr++;
 570   3              Temp1 = SONG[Addr];
 571   3              continue;
 572   3              break;
 573   3          }
 574   2          if (Temp1 == 0xFF) continue;
 575   2          if (Temp1 >= 0x32){
 576   3            SheetDown[Index] = '.';
 577   3            SheetUp[Index] = ' ';
 578   3          } else if (Temp1 <= 0x18){
 579   3            SheetUp[Index] = '.';
 580   3            SheetDown[Index] = ' ';
 581   3          } else {
 582   3            SheetUp[Index] = ' ';
 583   3            SheetDown[Index] = ' ';
 584   3          }
 585   2          Addr++;
 586   2          Temp2 = SONG[Addr];
 587   2          if (Temp2 == 0x20) {
 588   3            Addr++;
 589   3            Index++;
 590   3            Temp1 = SONG[Addr];
 591   3            continue;
 592   3          }
 593   2          else if (Temp2 == 0x10)
 594   2            SheetDown[Index] = '-';
 595   2          else if (Temp2 == 0x08)
 596   2            SheetDown[Index] = '=';
 597   2          else if (Temp2 == 0x30){
 598   3            Index++;
 599   3            SheetMid[Index] = '.';
 600   3            SheetDown[Index] = ' ';
 601   3            SheetUp[Index] = ' ';
 602   3          } else if (Temp2 >= 0x40){
 603   3            Temp2 = Temp2 - 0x20;
 604   3            while (Temp2 >= 0x20){
 605   4              Index++;
 606   4              SheetMid[Index] = '-';
 607   4              SheetDown[Index] = ' ';
 608   4              SheetUp[Index] = ' ';
 609   4              Temp2 = Temp2 - 0x20;
 610   4            }
 611   3          }
 612   2          Addr++;
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 11  

 613   2          Index++;
 614   2          Temp1 = SONG[Addr];
 615   2        }
 616   1        return;
 617   1      }
 618          
 619          char Testnote(uchar flag, int i, int answer){
 620   1        
 621   1        OPT_CHECK = 0xFF;
 622   1        while (OPT_CHECK&flag){
 623   2          bee_Speak = ~bee_Speak;
 624   2          Delay_xMs(NOTE[i-1]);
 625   2          OPT_CHECK = 0xFF;
 626   2        }
 627   1        if (NOTE[i-1] == answer) return 0;
 628   1        return 1;
 629   1      }
 630          
 631          void TestSong(unsigned int i){
 632   1        unsigned char Temp1;
 633   1        unsigned int Addr,start;
 634   1        unsigned int lineCount, loc;
 635   1        unsigned char lrc[20];
 636   1        unsigned int errorCount = 0;
 637   1        char errorCountStr[10];
 638   1        char errorFlag = 0;
 639   1      
 640   1        lineCount = 1;
 641   1        loc = 0;
 642   1        start = INDEX[i];
 643   1        Addr = start;  
 644   1        GetSheet(Addr);
 645   1        
 646   1        strncpy(lrc,  SheetUp, 16);
 647   1        Disp(2,0,16,lrc);
 648   1        strncpy(lrc, SheetMid, 16);
 649   1        Disp(3,0,16,lrc);
 650   1        strncpy(lrc, SheetDown, 16);
 651   1        Disp(4,0,16,lrc); 
 652   1      
 653   1        Temp1 = SONG[Addr];
 654   1        while(Temp1!=0x00){
 655   2          if (Temp1 == 0xFF){
 656   3            Addr++;
 657   3            Temp1 = SONG[Addr];
 658   3          }
 659   2          while (1){
 660   3            s1_s2_check();
 661   3            pitch = DLED_1*7-DLED_2*7;
 662   3            OPT_CHECK = 0xFF;
 663   3            if (OPT_CHECK&0x01) {
 664   4              errorFlag = Testnote(0x01, 7+pitch, Temp1);
 665   4            }
 666   3            else if (OPT_CHECK&0x02) {
 667   4              errorFlag = Testnote(0x02, 6+pitch, Temp1);
 668   4            }
 669   3            else if (OPT_CHECK&0x04) {
 670   4              errorFlag = Testnote(0x04, 5+pitch, Temp1);
 671   4            }
 672   3            else if (OPT_CHECK&0x08) {
 673   4              errorFlag = Testnote(0x08, 4+pitch, Temp1);
 674   4            }
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 12  

 675   3            else if (OPT_CHECK&0x10) {
 676   4              errorFlag = Testnote(0x10, 3+pitch, Temp1);
 677   4            }
 678   3            else if (OPT_CHECK&0x20) {
 679   4              errorFlag = Testnote(0x20, 2+pitch, Temp1);
 680   4            }
 681   3            else if (OPT_CHECK&0x40) {
 682   4              errorFlag = Testnote(0x40, 1+pitch, Temp1);
 683   4            }
 684   3          }
 685   2          if (errorFlag){
 686   3            errorCount++;
 687   3            Disp(1,0,6,"Error!");
 688   3          } else {
 689   3            Disp(1,0,6,"Right!");
 690   3          }
 691   2          Addr += 2;
 692   2          Temp1 = SONG[Addr];
 693   2          if (Sheet2Note[Addr - start] > lineCount*16){
 694   3            loc = loc + 16;
 695   3            lineCount++;
 696   3            strncpy(lrc, SheetUp+loc, 16);
 697   3            Disp(2,0,16,lrc);
 698   3            strncpy(lrc, SheetMid+loc, 16);
 699   3            Disp(3,0,16,lrc);
 700   3            strncpy(lrc, SheetDown+loc, 16);
 701   3            Disp(4,0,16,lrc);
 702   3          }
 703   2        }
 704   1        Ini_Lcd();
 705   1        Disp(1,0,16,"Error Number is");
 706   1        itoa(errorCount, errorCountStr, 10);
 707   1        Disp(2,0,strlen(errorCountStr), errorCountStr); 
 708   1        while(1){
 709   2          KeyIO=0xF0;
 710   2          if ((P1&0xf0)!=0xf0) {
 711   3            Delay_xMs(100);
 712   3            if((KeyIO&0xF0)!=0xF0){
 713   4              return;
 714   4            }
 715   3            Delay_xMs(100);
 716   3          } 
 717   2        }
 718   1        
 719   1      }
 720          
 721          // 练习模式
 722          void TestMode(){
 723   1        Ini_Lcd();
 724   1        Disp(1,0,8,"1.新宝岛");
 725   1        Disp(2,0,6,"2.爱河");
 726   1        Disp(3,0,10,"3.祝你平安");
 727   1        Disp(4,0,10,"4.天空之城");
 728   1      
 729   1        KeyIO = 0xF0;
 730   1        while(1){
 731   2          s1_s2_check();
 732   2          if ((P1&0xF0)!=0xF0){
 733   3            Delay_xMs(100);
 734   3            if((KeyIO&0xF0)!=0xF0){
 735   4              key = scankey();
 736   4              switch (key)
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 13  

 737   4              {
 738   5              case 11:
 739   5                Ini_Lcd();
 740   5                TestSong(0);
 741   5                return;
 742   5                break;
 743   5              case 12:
 744   5                Ini_Lcd();
 745   5                TestSong(1);
 746   5                return;
 747   5                break;
 748   5              case 13:
 749   5                Ini_Lcd();
 750   5                TestSong(2);
 751   5                return;
 752   5                break;
 753   5              case 14:
 754   5                Ini_Lcd();
 755   5                TestSong(3);
 756   5                return;
 757   5                break;
 758   5              default:
 759   5                return;
 760   5                break;
 761   5              }
 762   4            }
 763   3            Delay_xMs(2500);
 764   3          }
 765   2        }
 766   1      }
 767          
 768          void showNote(uchar note, int line1, int line2){
 769   1        if (note >= 0x32){
 770   2          Disp(line1,3,4,"高音");
 771   2        } else if (note <= 0x18){
 772   2          Disp(line1,3,4,"低音");
 773   2        } else {
 774   2          Disp(line1,3,4,"中音");
 775   2        }
 776   1        switch (note){
 777   2          case 0x60:
 778   2          case 0x30:
 779   2          case 0x18:
 780   2            Disp(line2,4,1,"1");
 781   2            break;
 782   2          case 0x56:
 783   2          case 0x2b:
 784   2          case 0x15:
 785   2            Disp(line2,4,1,"2");
 786   2            break;
 787   2          case 0x4C:
 788   2          case 0x26:
 789   2          case 0x13:
 790   2            Disp(line2,4,1,"3");
 791   2            break;
 792   2          case 0x48:
 793   2          case 0x24:
 794   2          case 0x12:
 795   2            Disp(line2,4,1,"4");
 796   2            break;
 797   2          case 0x40:
 798   2          case 0x20:
C51 COMPILER V9.60.0.0   MAIN                                                              08/22/2020 01:04:48 PAGE 14  

 799   2          case 0x10:
 800   2            Disp(line2,4,1,"5");
 801   2            break;
 802   2          case 0x39:
 803   2          case 0x1C:
 804   2          case 0x0E:
 805   2            Disp(line2,4,1,"6");
 806   2            break;
 807   2          case 0x32:
 808   2          case 0x19:
 809   2          case 0x0D:
 810   2            Disp(line2,4,1,"7");
 811   2            break;
 812   2          default:
 813   2            break;
 814   2        }
 815   1      }
 816          
*** WARNING C294 IN LINE 202 OF main.c: unreachable code
*** WARNING C294 IN LINE 290 OF main.c: unreachable code
*** WARNING C294 IN LINE 332 OF main.c: unreachable code
*** WARNING C294 IN LINE 519 OF main.c: unreachable code
*** WARNING C294 IN LINE 685 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   4958    ----
   CONSTANT SIZE    =   2061    ----
   XDATA SIZE       =   1542     116
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  6 WARNING(S),  0 ERROR(S)
