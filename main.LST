C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /***********************************************
   2          基于STC15F2K60S2系列单片机C语言编程实现
   3          使用如下头文件，不用另外再包含"REG51.H"
   4          #include <STC15F2K60S2.h>
   5          ***********************************************/
   6          #include "sys_fun.h"
   7          #include "songs.h"
   8          #include "display.h"
   9          #include "sing.h"
  10          #include "string.h"
  11          #include <stdlib.h>
  12          
  13          uchar port_status;
  14          uchar key;
  15          unsigned char Count;
  16          double pitch = 7;
  17          char pitchFlag = 1;
  18          char currentPage = 1;
  19          unsigned char RECORDED[250];
  20          unsigned char SheetMid[250];
  21          unsigned char SheetUp[250];
  22          unsigned char SheetDown[250];
  23          unsigned int Sheet2Note[250];
  24          
  25          
  26          
  27          int lastStartCount = -1;
  28          int lastEndCount = 0;
  29          uchar lastNote = 0x00;
  30          
  31          char *itoa(int val, char *buf, unsigned radix)
  32          {
  33   1          char *p;             
  34   1          char *firstdig;      
  35   1          char temp;           
  36   1          unsigned digval;     
  37   1          p = buf;
  38   1          if(val <0)
  39   1          {
  40   2              *p++ = '-';
  41   2              val = (unsigned long)(-(long)val);
  42   2          }
  43   1          firstdig = p; 
  44   1          do{
  45   2              digval = (unsigned)(val % radix);
  46   2              val /= radix;
  47   2             
  48   2              if  (digval > 9)
  49   2                  *p++ = (char)(digval - 10 + 'a'); 
  50   2              else
  51   2                  *p++ = (char)(digval + '0');      
  52   2          }while(val > 0);
  53   1         
  54   1          *p-- = '\0';         
  55   1          do{
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 2   

  56   2              temp = *p;
  57   2              *p = *firstdig;
  58   2              *firstdig = temp;
  59   2              --p;
  60   2              ++firstdig;        
  61   2          }while(firstdig < p);  
  62   1          return buf;
  63   1      }
  64          
  65          void Time0_Int() interrupt 1
  66          {
  67   1         TH0 = 0xDC;
  68   1         TL0 = 0x00;
  69   1         Count++;   
  70   1      }
  71          
  72          void Playnote(uchar flag, int i){
  73   1        OPT_CHECK = 0xFF;
  74   1        while (OPT_CHECK&flag){
  75   2          bee_Speak = ~bee_Speak;
  76   2          Delay_xMs(NOTE[i-1]);
  77   2          OPT_CHECK = 0xFF;
  78   2        }
  79   1        pitchFlag = 1;
  80   1      }
  81          
  82          void PlayMusic();
  83          void ManualPlay();
  84          void MenuDisplay(int);
  85          void Record();
  86          int Recordnote(uchar, int, int);
  87          void PlayRecord();
  88          void GetSheet(int);
  89          void TestMode();
  90          
  91          void main()
  92          {
  93   1        P5M1=0x00;
  94   1        P5M0=0x30;
  95   1        
  96   1        P4M1=0xC0;
  97   1        P4M0=0x00;
  98   1        
  99   1        P3M1=0x00;
 100   1        P3M0=0x00;
 101   1        
 102   1        Ini_Lcd();//液晶初始化子程序
 103   1        Disp(1,0,16,"浙江大学光电学院");//显示数据到LCD12864子程序      
 104   1        Disp(2,1,12,"电子线路设计");//显示数据到LCD12864子程序
 105   1        Disp(3,2,8,"87951197");//显示数据到LCD12864子程序
 106   1        Disp(4,1,12,"液晶显示成功");//显示数据到LCD12864子程序*/
 107   1        while(1)
 108   1        {
 109   2          s1_s2_check();
 110   2          P4M1=0x00;
 111   2          P4M0=0x00;
 112   2          Ini_Lcd();//液晶初始化子程序
 113   2          MenuDisplay(currentPage);
 114   2          while(1){
 115   3            KeyIO = 0xF0;
 116   3            s1_s2_check();
 117   3            if ((P1&0xF0)!=0xF0){
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 3   

 118   4              Delay_xMs(100);
 119   4              if((KeyIO&0xF0)!=0xF0){
 120   5                key = scankey();
 121   5                while((KeyIO&0xF0)!=0xF0) KeyIO = 0xF0;
 122   5                switch (key)
 123   5                {
 124   6                case 11:
 125   6                  PlayMusic(); //音乐播放
 126   6                  bee_Speak = 0;
 127   6                  MenuDisplay(currentPage);
 128   6                  break;
 129   6                case 12:
 130   6                  ManualPlay(); //演奏模式
 131   6                  MenuDisplay(currentPage);
 132   6                  break;
 133   6                case 13:
 134   6                  currentPage = 2; //1到2
 135   6                  MenuDisplay(currentPage);
 136   6                  break;
 137   6                case 14:
 138   6                  Record(); // 录音模式
 139   6                  MenuDisplay(currentPage);
 140   6                  break;
 141   6                case 21:
 142   6                  PlayRecord(); // 播放录音
 143   6                  MenuDisplay(currentPage);
 144   6                  break;
 145   6                case 22:
 146   6                  currentPage = 1; // 2到1
 147   6                  MenuDisplay(currentPage);
 148   6                  break;
 149   6                case 23:
 150   6                  currentPage = 3; // 2到3
 151   6                  MenuDisplay(currentPage);
 152   6                  break;
 153   6                case 24:
 154   6                  TestMode();
 155   6                  MenuDisplay(currentPage);
 156   6                  break;
 157   6                case 31:
 158   6                  currentPage = 2; // 3到2
 159   6                  MenuDisplay(currentPage);
 160   6                  break;
 161   6                default:
 162   6                  break;
 163   6                }
 164   5              }
 165   4              Delay_xMs(2500);
 166   4            }
 167   3          }
 168   2          Delay_xMs(2500);    
 169   2        }
 170   1      }
 171          
 172          /*******************定时器初始化********************/
 173          void Time0_Init()
 174          {
 175   1       TMOD = 0x01;
 176   1       IE   = 0x82;
 177   1       TH0  = 0xDC;
 178   1       TL0  = 0x00;  //11.0592MZ
 179   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 4   

 180          /****************播放音乐*************************/
 181          void s1_s2_check(void)
 182          {
 183   1        if(P4&0x40) 
 184   1          DLED_1 =1;
 185   1        else  
 186   1          DLED_1 =0;
 187   1        if((P4&0x80)) 
 188   1          DLED_2 =1;
 189   1        else  
 190   1          DLED_2 =0;
 191   1      }
 192          
 193          /****************播放音乐*************************/
 194          void Play_Song(unsigned char i)
 195          {
 196   1        unsigned char Temp1,Temp2;
 197   1        unsigned int Addr,start;
 198   1        unsigned int lineCount, loc;
 199   1        unsigned char lrc[20];
 200   1      
 201   1        lineCount = 1;
 202   1        loc = 0;
 203   1        start = INDEX[i];
 204   1        Addr = start;  
 205   1        GetSheet(Addr);
 206   1        
 207   1        strncpy(lrc,  SheetUp, 16);
 208   1        Disp(2,0,16,lrc);
 209   1        strncpy(lrc, SheetMid, 16);
 210   1        Disp(3,0,16,lrc);
 211   1        strncpy(lrc, SheetDown, 16);
 212   1        Disp(4,0,16,lrc);
 213   1        Count = 0;    
 214   1      
 215   1        while(1)
 216   1        {
 217   2          
 218   2          Temp1 = SONG[Addr++];
 219   2            if ( Temp1 == 0xFF )
 220   2            {
 221   3              TR0 = 0;                 
 222   3              Delay_xMs(100);
 223   3            }
 224   2            else if ( Temp1 == 0x00 )   
 225   2            {
 226   3              return;
 227   3            }
 228   2            else
 229   2            {
 230   3              Temp2 = SONG[Addr++];
 231   3              TR0 = 1;
 232   3            while(1)
 233   3            {
 234   4                bee_Speak = ~bee_Speak;
 235   4                Delay_xMs(Temp1);
 236   4                if ( Temp2 == Count )
 237   4                {
 238   5                if (Sheet2Note[Addr - start] > lineCount*16){
 239   6                  loc = loc + 16;
 240   6                  lineCount++;
 241   6                  strncpy(lrc, SheetUp+loc, 16);
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 5   

 242   6                  Disp(2,0,16,lrc);
 243   6                  strncpy(lrc, SheetMid+loc, 16);
 244   6                  Disp(3,0,16,lrc);
 245   6                  strncpy(lrc, SheetDown+loc, 16);
 246   6                  Disp(4,0,16,lrc);
 247   6                }
 248   5                    Count = 0;
 249   5                    break;
 250   5                }
 251   4              KeyIO=0xF0;
 252   4              if ((P1&0xf0)!=0xf0) return;
 253   4            }
 254   3            }
 255   2        }
 256   1        bee_Speak = 0;  //关闭蜂鸣器
 257   1      }
 258          
 259          
 260          /*****************检测控制端口的状态*****************/
 261          uchar ctrl_port_check(void)
 262          {
 263   1          SW_CTRL = 0xFF;
 264   1          return  SW_CTRL&0xF0;
 265   1      }
 266          
 267          uchar scankey(void)//矩阵键盘翻转扫描
 268          {
 269   1        uint keyvalue=0;
 270   1        uchar temp1,temp2,keycode;
 271   1      
 272   1        KeyIO=0xf0;   //行置0列置1
 273   1        temp1=KeyIO&0xf0;
 274   1        if((temp1&0xf0)==0xf0) return(0);  //若无键按下返回0
 275   1        KeyIO=0x0f;
 276   1        temp2=KeyIO&0x0f;            //若有键按下，行置1列置0
 277   1        keycode=~(temp1|temp2);        //获得键盘码
 278   1        switch(keycode)            //根据键盘码返回键值
 279   1        {
 280   2          case 0x11:return(11);break;
 281   2          case 0x21:return(12);break;
 282   2          case 0x41:return(13);break;
 283   2          case 0x81:return(14);break;
 284   2          case 0x12:return(21);break;
 285   2          case 0x22:return(22);break;
 286   2          case 0x42:return(23);break;
 287   2          case 0x82:return(24);break;
 288   2          case 0x14:return(31);break;
 289   2          case 0x24:return(32);break;
 290   2          case 0x44:return(33);break;
 291   2          case 0x84:return(34);break;
 292   2          case 0x18:return(41);break;
 293   2          case 0x28:return(42);break;
 294   2          case 0x48:return(43);break;
 295   2          case 0x88:return(44);break;
 296   2          default:  return(0);break;
 297   2        }
 298   1        return(0);
 299   1      }
 300             
 301          /****************延迟毫秒数************************/
 302          void Delay_xMs(unsigned int x)
 303          {
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 6   

 304   1          unsigned int i,j;
 305   1          for( i = 0;i < x;i++ )
 306   1          {
 307   2              for( j = 0;j<2;j++ );
 308   2          }
 309   1      }
 310          
 311          // 菜单功能函数
 312          
 313          void MenuDisplay(int page){
 314   1        Ini_Lcd();
 315   1        switch (page)
 316   1        {
 317   2        case 1:
 318   2          Disp(1,3,4,"菜单");
 319   2          Disp(2,0,10,"1.播放音乐");
 320   2          Disp(3,0,10,"2.弹奏模式");
 321   2          Disp(4,0,8,"3.下一页");
 322   2          break;
 323   2        case 2:
 324   2          Disp(1,0,10,"4.录音模式");
 325   2          Disp(2,0,10,"5.播放录音");
 326   2          Disp(3,0,8,"6.上一页");
 327   2          Disp(4,0,8,"7.下一页");
 328   2          break;
 329   2        case 3:
 330   2          Disp(1,0,10,"8.练习模式");
 331   2          Disp(2,0,8,"9.上一页");
 332   2          break;
 333   2        default:
 334   2          break;
 335   2        }
 336   1      
 337   1      }
 338          
 339          void PlayMusic(){
 340   1        Ini_Lcd();
 341   1        Disp(1,0,8,"1.新宝岛");
 342   1        Disp(2,0,6,"2.爱河");
 343   1        Disp(3,0,10,"3.祝你平安");
 344   1        Disp(4,0,10,"4.天空之城");
 345   1      
 346   1        Time0_Init();
 347   1        KeyIO = 0xF0;
 348   1        while(1){
 349   2          s1_s2_check();
 350   2          if ((P1&0xF0)!=0xF0){
 351   3            Delay_xMs(100);
 352   3            if((KeyIO&0xF0)!=0xF0){
 353   4              key = scankey();
 354   4              switch (key)
 355   4              {
 356   5              case 11:
 357   5                Ini_Lcd();
 358   5                Disp(1,0,8,"1.新宝岛");
 359   5                Play_Song(0);
 360   5                return;
 361   5                break;
 362   5              case 12:
 363   5                Ini_Lcd();
 364   5                Disp(1,0,6,"2.爱河");
 365   5                Play_Song(1);
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 7   

 366   5                return;
 367   5                break;
 368   5              case 13:
 369   5                Ini_Lcd();
 370   5                Disp(1,0,10,"3.祝你平安");
 371   5                Play_Song(2);
 372   5                return;
 373   5                break;
 374   5              case 14:
 375   5                Ini_Lcd();
 376   5                Disp(1,0,10,"4.天空之城");
 377   5                Play_Song(3);
 378   5                return;
 379   5                break;
 380   5              default:
 381   5                return;
 382   5                break;
 383   5              }
 384   4            }
 385   3            Delay_xMs(2500);
 386   3          }
 387   2        }
 388   1      }
 389          
 390          void ManualPlay(){
 391   1        s1_s2_check();
 392   1        Ini_Lcd();
 393   1        Disp(1,2,8,"演奏模式");
 394   1        Disp(4,1,12,"按任意键返回");
 395   1        while(1) {
 396   2          KeyIO=0xF0;
 397   2          if ((P1&0xf0)!=0xf0) {
 398   3            Delay_xMs(100);
 399   3            if((KeyIO&0xF0)!=0xF0){
 400   4              key = scankey();
 401   4              return;
 402   4              break;
 403   4            }
 404   3            Delay_xMs(100);
 405   3          }
 406   2          OPT_CHECK = 0xFF;
 407   2          s1_s2_check();
 408   2          pitch = 7 + DLED_2*7 - DLED_1*7;
 409   2          if (pitch == 14){
 410   3            Disp(2,3,4,"高音");
 411   3          } else if (pitch == 7){
 412   3            Disp(2,3,4,"中音");
 413   3          } else if (pitch == 0){
 414   3            Disp(2,3,4,"低音");
 415   3          }
 416   2          if (OPT_CHECK&0x01) Playnote(0x01, 7+pitch);
 417   2           else if (OPT_CHECK&0x02) Playnote(0x02, 6+pitch);
 418   2           else if (OPT_CHECK&0x04) Playnote(0x04, 5+pitch);
 419   2           else if (OPT_CHECK&0x08) Playnote(0x08, 4+pitch);
 420   2           else if (OPT_CHECK&0x10) Playnote(0x10, 3+pitch);
 421   2           else if (OPT_CHECK&0x20) Playnote(0x20, 2+pitch);
 422   2           else if (OPT_CHECK&0x40) Playnote(0x40, 1+pitch);  
 423   2        }
 424   1      }
 425          
 426          // 录制
 427          
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 8   

 428          void Record(){
 429   1        char continueFlag = 0;
 430   1        int currentIndex = 0;
 431   1        lastEndCount = 0;
 432   1        lastStartCount = -1;
 433   1        lastNote = 0x00;
 434   1      
 435   1        s1_s2_check();
 436   1        Ini_Lcd();
 437   1        Disp(1,2,8,"录音模式");
 438   1        Disp(2,0,10,"1.开始录音");
 439   1        
 440   1        Disp(4,1,12,"按其他键返回");
 441   1        
 442   1        while(!continueFlag) {
 443   2          KeyIO=0xF0;
 444   2          if ((P1&0xf0)!=0xf0) {
 445   3            Delay_xMs(100);
 446   3            if((KeyIO&0xF0)!=0xF0){
 447   4              key = scankey();
 448   4              switch (key){
 449   5                case 11: continueFlag = 1;break;
 450   5                default: return;
 451   5              }
 452   4            }
 453   3            Delay_xMs(100);
 454   3          }
 455   2        }
 456   1        memset(RECORDED,0x00,sizeof(RECORDED));
 457   1        Ini_Lcd();
 458   1        Disp(4,0,16,"按任意键结束录音");
 459   1        Count = 0;
 460   1        Time0_Init();
 461   1        while(1){
 462   2          KeyIO=0xF0;
 463   2          if ((P1&0xf0)!=0xf0) {
 464   3            Delay_xMs(100);
 465   3            if((KeyIO&0xF0)!=0xF0){
 466   4              key = scankey();
 467   4              Disp(3,0,8,"录音完成");
 468   4              RECORDED[currentIndex] = lastNote;
 469   4              RECORDED[currentIndex+1] = lastEndCount - lastStartCount; 
 470   4              return;
 471   4            }
 472   3            Delay_xMs(100);
 473   3          }
 474   2          OPT_CHECK = 0xFF;
 475   2          s1_s2_check();
 476   2          pitch = 7 + DLED_2*7 - DLED_1*7;
 477   2          if (pitch == 14){
 478   3            Disp(2,3,4,"高音");
 479   3          } else if (pitch == 7){
 480   3            Disp(2,3,4,"中音");
 481   3          } else if (pitch == 0){
 482   3            Disp(2,3,4,"低音");
 483   3          }
 484   2          if (OPT_CHECK&0x01) currentIndex = Recordnote(0x01, 7+pitch, currentIndex);
 485   2          else if (OPT_CHECK&0x02) currentIndex  = Recordnote(0x02, 6+pitch, currentIndex);
 486   2          else if (OPT_CHECK&0x04) currentIndex  = Recordnote(0x04, 5+pitch, currentIndex);
 487   2          else if (OPT_CHECK&0x08) currentIndex  = Recordnote(0x08, 4+pitch, currentIndex);
 488   2          else if (OPT_CHECK&0x10) currentIndex  = Recordnote(0x10, 3+pitch, currentIndex);
 489   2          else if (OPT_CHECK&0x20) currentIndex  = Recordnote(0x20, 2+pitch, currentIndex);
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 9   

 490   2          else if (OPT_CHECK&0x40) currentIndex  = Recordnote(0x40, 1+pitch, currentIndex); 
 491   2        }
 492   1        
 493   1      }
 494          
 495          //音符录制
 496          
 497          int Recordnote(uchar flag, int i, int index){
 498   1        if (lastStartCount != -1){
 499   2          RECORDED[index] = lastNote;
 500   2          RECORDED[index+1] = Count - lastStartCount;
 501   2        }
 502   1        OPT_CHECK = 0xFF;
 503   1        lastStartCount = Count;
 504   1        while (OPT_CHECK&flag){
 505   2          bee_Speak = ~bee_Speak;
 506   2          Delay_xMs(NOTE[i-1]);
 507   2          OPT_CHECK = 0xFF;
 508   2        }
 509   1        lastEndCount = Count;
 510   1        lastNote = NOTE[i-1];
 511   1        return index+2;
 512   1      }
 513          
 514          // 录音播放
 515          
 516          void PlayRecord()
 517          {
 518   1        unsigned char Temp1,Temp2;
 519   1        unsigned int Addr;
 520   1      
 521   1        s1_s2_check();
 522   1        Ini_Lcd();
 523   1        Disp(1,2,8,"播放录音");
 524   1        Disp(4,1,12,"按任意键返回");
 525   1      
 526   1             
 527   1        Time0_Init();
 528   1        Addr = 2;  
 529   1        Count = 0; 
 530   1        Temp1 = RECORDED[Addr];
 531   1        if (Temp1 == 0x00){
 532   2          Disp(1,0,6,"ERROR!");
 533   2          while(1);
 534   2        }
 535   1        while(1)
 536   1        {
 537   2          Temp1 = RECORDED[Addr++];
 538   2            if ( Temp1 == 0xFF )  
 539   2            {
 540   3              TR0 = 0;                 
 541   3              Delay_xMs(100);
 542   3            }
 543   2            else if ( Temp1 == 0x00 )   
 544   2            {
 545   3              return;
 546   3            }
 547   2            else
 548   2            {
 549   3              Temp2 = RECORDED[Addr++];
 550   3              TR0 = 1;
 551   3            while(1)
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 10  

 552   3            {
 553   4                bee_Speak = ~bee_Speak;
 554   4                Delay_xMs(Temp1);
 555   4                if ( Temp2 == Count )
 556   4                {
 557   5                   Count = 0;
 558   5                   break;
 559   5                }
 560   4              KeyIO=0xF0;
 561   4              if ((P1&0xf0)!=0xf0) return;
 562   4            }
 563   3            }
 564   2        }
 565   1        bee_Speak = 0;  //关闭蜂鸣器
 566   1      }
 567          
 568          // 简谱生成
 569          
 570          void GetSheet(int start){
 571   1        unsigned char Temp1,Temp2;
 572   1        unsigned int Addr, Index;
 573   1      
 574   1        Addr = start; Index = 0;
 575   1        Temp1 = SONG[Addr];
 576   1        while (Temp1 != 0x00){
 577   2          Sheet2Note[Addr - start] = Index;
 578   2          switch (Temp1){
 579   3            case 0x60:
 580   3            case 0x30:
 581   3            case 0x18:
 582   3              SheetMid[Index] = '1';
 583   3              break;
 584   3            case 0x56:
 585   3            case 0x2b:
 586   3            case 0x15:
 587   3              SheetMid[Index] = '2';
 588   3              break;
 589   3            case 0x4C:
 590   3            case 0x26:
 591   3            case 0x13:
 592   3              SheetMid[Index] = '3';
 593   3              break;
 594   3            case 0x48:
 595   3            case 0x24:
 596   3            case 0x12:
 597   3              SheetMid[Index] = '4';
 598   3              break;
 599   3            case 0x40:
 600   3            case 0x20:
 601   3            case 0x10:
 602   3              SheetMid[Index] = '5';
 603   3              break;
 604   3            case 0x39:
 605   3            case 0x1C:
 606   3            case 0x0E:
 607   3              SheetMid[Index] = '6';
 608   3              break;
 609   3            case 0x32:
 610   3            case 0x19:
 611   3            case 0x0D:
 612   3              SheetMid[Index] = '7';
 613   3              break;
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 11  

 614   3            default:
 615   3              Addr++;
 616   3              Temp1 = SONG[Addr];
 617   3              continue;
 618   3              break;
 619   3          }
 620   2          if (Temp1 == 0xFF) continue;
 621   2          if (Temp1 >= 0x32){
 622   3            SheetDown[Index] = '.';
 623   3            SheetUp[Index] = ' ';
 624   3          } else if (Temp1 <= 0x18){
 625   3            SheetUp[Index] = '.';
 626   3            SheetDown[Index] = ' ';
 627   3          } else {
 628   3            SheetUp[Index] = ' ';
 629   3            SheetDown[Index] = ' ';
 630   3          }
 631   2          Addr++;
 632   2          Temp2 = SONG[Addr];
 633   2          if (Temp2 == 0x20) {
 634   3            Addr++;
 635   3            Index++;
 636   3            Temp1 = SONG[Addr];
 637   3            continue;
 638   3          }
 639   2          else if (Temp2 == 0x10)
 640   2            SheetDown[Index] = '-';
 641   2          else if (Temp2 == 0x08)
 642   2            SheetDown[Index] = '=';
 643   2          else if (Temp2 == 0x30){
 644   3            Index++;
 645   3            SheetMid[Index] = '.';
 646   3            SheetDown[Index] = ' ';
 647   3            SheetUp[Index] = ' ';
 648   3          } else if (Temp2 >= 0x40){
 649   3            Temp2 = Temp2 - 0x20;
 650   3            while (Temp2 >= 0x20){
 651   4              Index++;
 652   4              SheetMid[Index] = '-';
 653   4              SheetDown[Index] = ' ';
 654   4              SheetUp[Index] = ' ';
 655   4              Temp2 = Temp2 - 0x20;
 656   4            }
 657   3          }
 658   2          Addr++;
 659   2          Index++;
 660   2          Temp1 = SONG[Addr];
 661   2        }
 662   1        return;
 663   1      }
 664          
 665          char Testnote(uchar flag, int i, int answer){
 666   1        
 667   1        OPT_CHECK = 0xFF;
 668   1        while (OPT_CHECK&flag){
 669   2          bee_Speak = ~bee_Speak;
 670   2          Delay_xMs(NOTE[i-1]);
 671   2          OPT_CHECK = 0xFF;
 672   2        }
 673   1        if (NOTE[i-1] == answer) return 0;
 674   1        return 1;
 675   1      }
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 12  

 676          
 677          void TestSong(unsigned int i){
 678   1        unsigned char Temp1;
 679   1        unsigned int Addr,start;
 680   1        unsigned int lineCount, loc;
 681   1        unsigned char lrc[20];
 682   1        unsigned int errorCount = 0;
 683   1        char errorCountStr[10];
 684   1        char errorFlag = 0;
 685   1      
 686   1        lineCount = 1;
 687   1        loc = 0;
 688   1        start = INDEX[i];
 689   1        Addr = start;  
 690   1        GetSheet(Addr);
 691   1        
 692   1        strncpy(lrc,  SheetUp, 16);
 693   1        Disp(2,0,16,lrc);
 694   1        strncpy(lrc, SheetMid, 16);
 695   1        Disp(3,0,16,lrc);
 696   1        strncpy(lrc, SheetDown, 16);
 697   1        Disp(4,0,16,lrc); 
 698   1      
 699   1        Temp1 = SONG[Addr];
 700   1        while(Temp1!=0x00){
 701   2          if (Temp1 == 0xFF){
 702   3            Addr++;
 703   3            Temp1 = SONG[Addr];
 704   3          }
 705   2          while (1){
 706   3            s1_s2_check();
 707   3            pitch = DLED_1*7-DLED_2*7;
 708   3            OPT_CHECK = 0xFF;
 709   3            if (OPT_CHECK&0x01) {
 710   4              errorFlag = Testnote(0x01, 7+pitch, Temp1);
 711   4              break;
 712   4            }
 713   3            else if (OPT_CHECK&0x02) {
 714   4              errorFlag = Testnote(0x02, 6+pitch, Temp1);
 715   4              break;
 716   4            }
 717   3            else if (OPT_CHECK&0x04) {
 718   4              errorFlag = Testnote(0x04, 5+pitch, Temp1);
 719   4              break;
 720   4            }
 721   3            else if (OPT_CHECK&0x08) {
 722   4              errorFlag = Testnote(0x08, 4+pitch, Temp1);
 723   4              break;
 724   4            }
 725   3            else if (OPT_CHECK&0x10) {
 726   4              errorFlag = Testnote(0x10, 3+pitch, Temp1);
 727   4              break;
 728   4            }
 729   3            else if (OPT_CHECK&0x20) {
 730   4              errorFlag = Testnote(0x20, 2+pitch, Temp1);
 731   4              break;
 732   4            }
 733   3            else if (OPT_CHECK&0x40) {
 734   4              errorFlag = Testnote(0x40, 1+pitch, Temp1);
 735   4              break;
 736   4            }
 737   3          }
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 13  

 738   2          if (errorFlag){
 739   3            errorCount++;
 740   3            Disp(1,0,6,"Error!");
 741   3          } else {
 742   3            Disp(1,0,6,"Right!");
 743   3          }
 744   2          Addr += 2;
 745   2          Temp1 = SONG[Addr];
 746   2          if (Sheet2Note[Addr - start] > lineCount*16){
 747   3            loc = loc + 16;
 748   3            lineCount++;
 749   3            strncpy(lrc, SheetUp+loc, 16);
 750   3            Disp(2,0,16,lrc);
 751   3            strncpy(lrc, SheetMid+loc, 16);
 752   3            Disp(3,0,16,lrc);
 753   3            strncpy(lrc, SheetDown+loc, 16);
 754   3            Disp(4,0,16,lrc);
 755   3          }
 756   2        }
 757   1        Ini_Lcd();
 758   1        Disp(1,0,16,"Error Number is");
 759   1        itoa(errorCount, errorCountStr, 10);
 760   1        Disp(2,0,sizeof(errorCountStr), errorCountStr); 
 761   1        while(1){
 762   2          KeyIO=0xF0;
 763   2          if ((P1&0xf0)!=0xf0) {
 764   3            Delay_xMs(100);
 765   3            if((KeyIO&0xF0)!=0xF0){
 766   4              return;
 767   4            }
 768   3            Delay_xMs(100);
 769   3          } 
 770   2        }
 771   1        
 772   1      }
 773          
 774          // 练习模式
 775          void TestMode(){
 776   1        Ini_Lcd();
 777   1        Disp(1,0,8,"1.新宝岛");
 778   1        Disp(2,0,6,"2.爱河");
 779   1        Disp(3,0,10,"3.祝你平安");
 780   1        Disp(4,0,10,"4.天空之城");
 781   1      
 782   1        KeyIO = 0xF0;
 783   1        while(1){
 784   2          s1_s2_check();
 785   2          if ((P1&0xF0)!=0xF0){
 786   3            Delay_xMs(100);
 787   3            if((KeyIO&0xF0)!=0xF0){
 788   4              key = scankey();
 789   4              switch (key)
 790   4              {
 791   5              case 11:
 792   5                Ini_Lcd();
 793   5                TestSong(0);
 794   5                return;
 795   5                break;
 796   5              case 12:
 797   5                Ini_Lcd();
 798   5                TestSong(1);
 799   5                return;
C51 COMPILER V9.60.0.0   MAIN                                                              08/21/2020 22:19:47 PAGE 14  

 800   5                break;
 801   5              case 13:
 802   5                Ini_Lcd();
 803   5                TestSong(2);
 804   5                return;
 805   5                break;
 806   5              case 14:
 807   5                Ini_Lcd();
 808   5                TestSong(3);
 809   5                return;
 810   5                break;
 811   5              default:
 812   5                return;
 813   5                break;
 814   5              }
 815   4            }
 816   3            Delay_xMs(2500);
 817   3          }
 818   2        }
 819   1      }
 820          
*** WARNING C294 IN LINE 168 OF main.c: unreachable code
*** WARNING C294 IN LINE 256 OF main.c: unreachable code
*** WARNING C294 IN LINE 298 OF main.c: unreachable code
*** WARNING C294 IN LINE 565 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6176    ----
   CONSTANT SIZE    =   1021    ----
   XDATA SIZE       =   1543     116
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
